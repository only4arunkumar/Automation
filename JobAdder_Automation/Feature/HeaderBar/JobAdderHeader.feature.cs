// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace JobAdder_Automation.Feature.HeaderBar
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class JobAdderHeaderFeature : Xunit.IClassFixture<JobAdderHeaderFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "JobAdderHeader.feature"
#line hidden
        
        public JobAdderHeaderFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "JobAdderHeader", "\tInorder to  check whether  individual JobAdder modules \r\n\tcan be invoked from th" +
                    "e main header bar ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(JobAdderHeaderFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Accessing JobAdder modules from header")]
        [Xunit.TraitAttribute("FeatureTitle", "JobAdderHeader")]
        [Xunit.TraitAttribute("Description", "Accessing JobAdder modules from header")]
        [Xunit.TraitAttribute("Category", "ExplicitLogin")]
        public virtual void AccessingJobAdderModulesFromHeader()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Accessing JobAdder modules from header", new string[] {
                        "ExplicitLogin"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I have successfully logged into JobAdder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.Then("Links to JobAdder modules should be clickable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Invoking Quick Search from header")]
        [Xunit.TraitAttribute("FeatureTitle", "JobAdderHeader")]
        [Xunit.TraitAttribute("Description", "Invoking Quick Search from header")]
        [Xunit.TraitAttribute("Category", "ExplicitLogin")]
        public virtual void InvokingQuickSearchFromHeader()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invoking Quick Search from header", new string[] {
                        "ExplicitLogin"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("I have successfully logged into JobAdder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Then("Quicksearch should be invokable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Invoking Quick Add from header")]
        [Xunit.TraitAttribute("FeatureTitle", "JobAdderHeader")]
        [Xunit.TraitAttribute("Description", "Invoking Quick Add from header")]
        [Xunit.TraitAttribute("Category", "ExplicitLogin")]
        public virtual void InvokingQuickAddFromHeader()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invoking Quick Add from header", new string[] {
                        "ExplicitLogin"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I have successfully logged into JobAdder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.Then("QuickAdd should be invokable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Candidate Recent Record List Displayed")]
        [Xunit.TraitAttribute("FeatureTitle", "JobAdderHeader")]
        [Xunit.TraitAttribute("Description", "Candidate Recent Record List Displayed")]
        public virtual void CandidateRecentRecordListDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Candidate Recent Record List Displayed", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("I have navigated to Candidates results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
testRunner.And("I have selected a candidate record from the candidate results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.Then("Record Details added into recent record list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                JobAdderHeaderFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                JobAdderHeaderFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
